---
description: 
globs: 
alwaysApply: false
---
# supabase-swift Library Stack & Dependency Versions

This rule documents the major dependencies used in the supabase-swift project, their versions, and best practices or remarks for each.

## Major Dependencies

- **apple/swift-crypto**: `1.0.0` ..< `4.0.0`
  - *Purpose*: Cryptographic functions (hashing, HMAC, JWT, etc.)
  - *Best Practices*: Use the latest 3.x version for security updates. Avoid deprecated APIs from 1.x. Always audit for breaking changes when updating to 4.x in the future.

- **apple/swift-http-types**: `from 1.3.0`
  - *Purpose*: Standard HTTP types for Swift (request, response, headers, etc.)
  - *Best Practices*: Use for type-safe HTTP abstractions. Stay updated for protocol improvements. Avoid custom HTTP type implementations.

- **pointfreeco/swift-clocks**: `from 1.0.0`
  - *Purpose*: Precise, testable time and clock abstractions.
  - *Best Practices*: Use for testable time-based code. Prefer over `DispatchTime`/`Date` for testability.

- **pointfreeco/swift-concurrency-extras**: `from 1.1.0`
  - *Purpose*: Utilities for Swift Concurrency (e.g., `AsyncSemaphore`, `AsyncClock`).
  - *Best Practices*: Use for advanced concurrency patterns. Keep up with upstream changes as Swift Concurrency evolves.

- **pointfreeco/swift-custom-dump**: `from 1.3.2`
  - *Purpose*: Pretty-printing and diffing for Swift data structures (mainly for testing).
  - *Best Practices*: Use in tests for readable output and snapshot diffs. Not needed in production code.

- **pointfreeco/swift-snapshot-testing**: `from 1.17.0`
  - *Purpose*: Snapshot testing for Swift (UI, data, etc.).
  - *Best Practices*: Use for regression testing. Update snapshots intentionally. Review diffs in PRs.

- **pointfreeco/xctest-dynamic-overlay**: `from 1.2.2`
  - *Purpose*: Test helpers and overlays for XCTest.
  - *Best Practices*: Use for test-only code. Not needed in production targets.

- **WeTransfer/Mocker**: `from 3.0.0`
  - *Purpose*: HTTP mocking for URLSession in tests.
  - *Best Practices*: Use for deterministic network tests. Keep up with breaking changes in major versions.

## General Best Practices
- Keep dependencies up to date within the specified version range for security and bug fixes.
- Audit changelogs for breaking changes before updating major versions.
- Use test-only dependencies (`CustomDump`, `SnapshotTesting`, `Mocker`, etc.) only in test targets.
- Prefer official or well-maintained libraries for core functionality (crypto, HTTP, concurrency).
- Avoid duplicating functionality provided by these libraries in your own codebase.

# Use this rule to understand the core library stack, dependency versions, and best practices for maintaining/updating dependencies in supabase-swift.
